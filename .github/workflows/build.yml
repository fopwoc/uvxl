name: Build

on:
  workflow_call:

jobs:
  build:
    name: Build ${{ matrix.package.name }} ${{ matrix.platform.os }} ${{ matrix.platform.target }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        package:
          - { name: "client", path: "./" }
          - { name: "server", path: "./uvxl-server" }
        platform: 
          - { os: "ubuntu-latest", target: [x86_64-unknown-linux-gnu] }
          - { os: "macos-latest", target: [x86_64-apple-darwin, aarch64-apple-darwin] }
          - { os: "windows-latest", target: [x86_64-pc-windows-msvc] }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ${{ matrix.package.path }}target/
          key: ${{ runner.os }}-cargo-${{ matrix.package.name }}-${{ matrix.platform.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ matrix.package.name }}-${{ matrix.platform.target }}
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.platform.target }}
      - name: Build project
        working-directory: ${{ matrix.package.path }}
        run: cargo build --release --locked --verbose --target ${{ matrix.platform.target }}
      - name: Chmod binary
        if: runner.os != 'Windows'
        working-directory: ${{ matrix.package.path }}
        run: chmod +x target/${{ matrix.platform.target }}/release/apex-client
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.package.name }}_${{ github.event.repository.name }}_${{ matrix.platform.target }}_${{ github.sha }}
          path: |
            target/${{ matrix.platform.target }}/release/${{ github.event.repository.name }}${{ (runner.os == 'Windows' && '.exe') || '' }}
