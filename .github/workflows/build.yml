name: Build

on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      binary:
        type: string
        required: true
      path:
        type: string
        required: true

jobs:
  build:
    name: Build ${{ inputs.name }} ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ${{ inputs.path }}target/
          key: ${{ runner.os }}-cargo-${{ inputs.name }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ inputs.name }}-${{ matrix.target }}
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      - name: Build project
        working-directory: ${{ inputs.path }}
        run: cargo build --release --locked --verbose --target ${{ matrix.target }}
      - name: Make binary executable
        if: runner.os != 'Windows'
        working-directory: ${{ inputs.path }}
        run: chmod +x target/${{ matrix.target }}/release/${{ inputs.binary }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}_${{ inputs.name }}_${{ matrix.target }}_${{ github.sha }}
          path: |
            ${{ inputs.path }}target/${{ matrix.target }}/release/${{ inputs.binary }}${{ (runner.os == 'Windows' && '.exe') || '' }}
