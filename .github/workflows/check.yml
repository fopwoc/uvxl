name: Analyze

on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      binary:
        type: string
        required: true
      path:
        type: string
        required: true

jobs:
  check:
    name: Analyze ${{ inputs.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ${{ inputs.path }}target/
          key: ${{ runner.os }}-cargo-${{ inputs.name }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-${{ inputs.name }}-${{ matrix.target }}
      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
          components: clippy, rustfmt
      - name: Run cargo check
        working-directory: ${{ inputs.path }}
        run: cargo check --locked --verbose --target ${{ matrix.target }}
#      - name: Run cargo fmt code style
#        working-directory: ${{ inputs.path }}
#        run: cargo fmt --all -- --check
      - name: Run cargo clippy
        working-directory: ${{ inputs.path }}
        run: cargo clippy --all-features --all-targets -- -D warnings
      - name: Run cargo audit
        working-directory: ${{ inputs.path }}
        run: cargo audit
